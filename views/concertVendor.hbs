<div class="container">
    <!-- Header for the vendor list -->
    <h2>List of Vendors Available at a Concert</h2>

    <!-- Table to display vendors associated with concerts -->
    <table>
        <thead>
            <tr>
                <!-- Dynamically generate table headers from the first object's keys -->
                {{#each data.[0]}}
                    <th>{{@key}}</th>
                {{/each}}
                <th colspan="2">Actions</th> <!-- Extra columns for Edit and Delete actions -->
            </tr>
        </thead>
        <tbody>
            <!-- Loop through data to populate rows for each vendor -->
            {{#each data}}
                <tr 
                    data-id="{{this.concertVendorID}}" 
                    data-concert-id="{{this.concertID}}" 
                    data-vendor-id="{{this.vendorID}}">
                    <td>{{this.concertVendorID}}</td>
                    <td>{{this.concertID}}</td>
                    <td>{{this.vendorID}}</td>
                    <td><a href="#" class="edit-btn">Edit</a></td>
                    <td><a href="#" class="delete-btn">Delete</a></td>
                </tr>
            {{/each}}
        </tbody>
    </table>

    <!-- Add new vendor-to-concert form -->
    <h3>Add a Vendor Available at a Concert</h3>
    <p>To add a new vendor available at a concert, please select the vendor's name and concert location below, then click 'Add Vendor Available at a Concert'!</p>
    <form id="add-vendor-at-concert-form" action="/add-vendor-at-concert-form" method="POST">
        <!-- Dropdown for selecting concert location -->
        <label for="concertLocation">Concert Location:</label>
        <select id="concertLocation" name="concertID" required>
            <option value="">Select Concert Location</option>
            {{#each concerts}}
                <option value="{{this.concertID}}">{{this.location}}</option>
            {{/each}}
        </select><br>

        <!-- Dropdown for selecting vendor name -->
        <label for="vendorName">Vendor Name:</label>
        <select id="vendorName" name="vendorID" required>
            <option value="">Select Vendor</option>
            {{#each vendors}}
                <option value="{{this.vendorID}}">{{this.vendorName}}</option>
            {{/each}}
        </select><br>

        <input type="submit" value="Add Vendor Available at a Concert">
    </form>
</div>

<!-- Update form in a popup menu -->
<div id="popupMenu" class="popup">
    <div class="popup-content">
        <form id="update-vendor-at-concert-form" action="/update-vendor-at-concert-form" method="POST">
            <!-- Hidden field for the unique concertVendorID -->
            <input type="hidden" name="concertVendorID" id="popupConcertVendorID">

            <!-- Dropdown for updating concert location -->
            <label for="popupConcertLocation">Concert Location:</label>
            <select id="popupConcertLocation" name="concertID" required>
                <option value="">Select Concert Location</option>
                {{#each concerts}}
                    <option value="{{this.concertID}}">{{this.location}}</option>
                {{/each}}
            </select><br>

            <!-- Dropdown for updating vendor name -->
            <label for="popupVendorName">Vendor Name:</label>
            <select id="popupVendorName" name="vendorID" required>
                <option value="">Select Vendor</option>
                {{#each vendors}}
                    <option value="{{this.vendorID}}">{{this.vendorName}}</option>
                {{/each}}
            </select><br>

            <input type="submit" value="Update Vendor Available at a Concert">
        </form>

        <!-- Close button for the popup -->
        <span id="closePopup" class="close">&times;</span>
        <button id="closeButton">Close</button>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
    const deleteButtons = document.querySelectorAll(".delete-btn"); // Select all delete buttons
    const editButtons = document.querySelectorAll(".edit-btn"); // Select all edit buttons
    const popupMenu = document.getElementById("popupMenu"); // Popup container
    const closePopup = document.getElementById("closePopup"); // Close icon in popup
    const closeButton = document.getElementById("closeButton"); // Close button in popup
    const updateForm = document.getElementById("update-vendor-at-concert-form"); // Update form

    // Handle Delete Button Click
    deleteButtons.forEach(button => {
        button.addEventListener("click", async function (event) {
            event.preventDefault(); // Prevent default link behavior
            const row = button.closest("tr"); // Get the parent row of the clicked button
            const concertVendorID = row.getAttribute("data-id"); // Extract concertVendorID from data attribute
            row.remove(); // Remove the row from the table

            try {
                const response = await fetch(`/delete-concert-vendor/${concertVendorID}`, {
                    method: 'DELETE',
                });
                if (!response.ok) {
                    throw new Error('Delete request failed');
                }
            } catch (error) {
                console.error("Error:", error);
            }
        });
    });

    // Handle Edit Button Click
    editButtons.forEach(button => {
        button.addEventListener("click", (event) => {
            event.preventDefault();
            const row = button.closest("tr");

            // Populate the form with existing data
            const concertVendorID = row.getAttribute("data-id");
            const concertID = row.getAttribute("data-concert-id");
            const vendorID = row.getAttribute("data-vendor-id");

            updateForm.action = `/update-vendor-at-concert/${concertVendorID}`; // Update the form action
            document.getElementById("popupConcertVendorID").value = concertVendorID;
            document.getElementById("popupConcertLocation").value = concertID;
            document.getElementById("popupVendorName").value = vendorID;

            // Show the popup menu
            popupMenu.style.display = "flex";
        });
    });

    // Close Popup Menu
    closePopup.addEventListener("click", () => {
        popupMenu.style.display = "none"; // Hide popup on close button click
    });

    closeButton.addEventListener("click", () => {
        popupMenu.style.display = "none"; // Hide popup on close button click
    });

    // Close Popup Menu when clicking outside the content area
    window.addEventListener("click", (event) => {
        if (event.target === popupMenu) {
            popupMenu.style.display = "none";
        }
    });

    // Handle Update Form Submission
    updateForm.addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent default form submission

        const formData = new FormData(updateForm);
        const concertVendorID = updateForm.getAttribute("action").split("/").pop();

        const payload = {
            concertID: formData.get("concertID"),
            vendorID: formData.get("vendorID"),
        };

        try {
            const response = await fetch(`/update-vendor-at-concert/${concertVendorID}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(payload),
            });

            if (response.ok) {
                // Update table row with new data
                const row = document.querySelector(`tr[data-id="${concertVendorID}"]`);
                row.setAttribute("data-concert-id", payload.concertID);
                row.setAttribute("data-vendor-id", payload.vendorID);
                row.children[1].textContent = payload.concertID;
                row.children[2].textContent = payload.vendorID;

                popupMenu.style.display = "none"; // Close popup
            } else {
                console.error("Update failed:", response.statusText);
            }
        } catch (error) {
            console.error("Error:", error);
        }
    });
});
</script>
